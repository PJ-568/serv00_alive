#!/bin/bash

# 默认配置 | Default configuration
DEFAULT_SERVERS_FILE="$HOME/.serv00_alive_servers"
## 当前语言 | Current language
CURRENT_LANG=0 ### 0: en-US, 1: zh-Hans-CN
VERSION="0.2.0"

# 颜色定义 | Color definitions
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# 本地化 | Localization
recho() {
  if [ "$CURRENT_LANG" == "1" ]; then
    ## zh-Hans-CN
    echo -e "$1";
  else
    ## en-US
    echo -e "$2";
  fi
}

# 显示版本信息 | Show version
show_version() {
  recho "${GREEN}serv00 保活 v$VERSION${NC}" "${GREEN}serv00 alive v$VERSION${NC}"
}

# 语言检测 | Language detection
if [ $(echo ${LANG/_/-} | grep -Ei "\\b(zh|cn)\\b") ]; then CURRENT_LANG=1; fi

# 显示帮助信息 | Show help information
show_help() {
  recho "${YELLOW}用法: serv00_alive [选项]${NC}" "${YELLOW}Usage: serv00_alive [options]${NC}"
  echo
  recho "${BLUE}选项：${NC}" "${BLUE}Options:${NC}"
  recho "  -h, --help     显示此帮助信息" "  -h, --help     Show this help information"
  recho "  -v, --version  显示版本信息" "  -v, --version  Show version information"
  echo "  -f, --file FILE"
  recho "                 指定包含服务器列表的文件（默认: $DEFAULT_SERVERS_FILE）" "                 Specify the file containing the server list (default: $DEFAULT_SERVERS_FILE)"
  echo
  recho "${BLUE}服务器文件格式：${NC}" "${BLUE}Server file format:${NC}"
  recho "  每行一个服务器，格式为 username@hostname:password" "  One server per line, in the format username@hostname:password"
  recho "  例如：" "  For example:"
  echo "    user1@sX.serv00.com:password1"
  echo "    user2@sX.serv00.com:password2"
  echo
  recho "${YELLOW}注意：${NC}" "${YELLOW}Note:${NC}"
  recho "  - 需要安装 sshpass 工具" "  - sshpass tool needs to be installed"
  recho "  - 请确保服务器文件权限设置正确以保护密码安全" "  - Ensure server file permissions are set correctly to protect password security"
}

# 解析命令行参数 | Parse command line arguments
parse_args() {
  while [[ $# -gt 0 ]]; do
    case $1 in
      -h|--help)
        show_help
        exit 0
        ;;
      -v|--version)
        show_version
        exit 0
        ;;
      -f|--file)
        SERVERS_FILE="$2"
        shift 2
        ;;
      *)
        recho "${RED}未知选项: $1${NC}" "${RED}Unknown option: $1${NC}"
        show_help
        exit 1
        ;;
    esac
  done
}

# 读取服务器列表 | Read server list
read_servers() {
  local file="$1"
  if [[ ! -f "$file" ]]; then
    recho "${RED}错误: 服务器文件 '$file' 不存在${NC}" "${RED}Error: Server file '$file' does not exist${NC}"
    exit 1
  fi
  
  # 读取服务器列表到数组 | Read server list into array
  mapfile -t servers < "$file"
  
  # 检查是否有服务器 | Check if there are servers
  if [[ ${#servers[@]} -eq 0 ]]; then
    recho "${RED}错误: 服务器文件 '$file' 中没有服务器${NC}" "${RED}Error: No servers in server file '$file'${NC}"
    exit 1
  fi
}

# 保活单个服务器连接 | Keep alive single server connection
keep_alive() {
  local server_entry="$1"
  
  # 分离用户名、主机名和密码 | Separate username, hostname and password
  local user=$(echo "$server_entry" | cut -d'@' -f1)
  local host_and_password=$(echo "$server_entry" | cut -d'@' -f2-)
  local server=$(echo "$host_and_password" | cut -d':' -f1)
  local password=$(echo "$host_and_password" | cut -d':' -f2-)
  
  # 执行SSH连接测试 | Execute SSH connection test
  recho "${BLUE}正在测试连接到 $user@$server...${NC}" "${BLUE}Testing connection to $user@$server...${NC}"
  timeout 30 sshpass -p "$password" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -tt "$user@$server" "echo \"Hello from $user\"; date; sleep 3"
  local result=$?
  
  # 处理结果 | Handle results
  if [ $result -eq 124 ]; then
    recho "${RED}错误：$user@$server 连接超时${NC}" "${RED}Error: $user@$server connection timed out${NC}"
    # 这里可以添加发送通知的代码 | Code to send notifications can be added here
    # message="Serv00 保活 SSH 连接超时！" | message="Serv00 alive SSH connection timed out!"
  elif [ $result -ne 0 ]; then
    recho "${RED}错误：$user@$server 连接失败${NC}" "${RED}Error: $user@$server connection failed${NC}"
    # message="Serv00 保活 SSH 连接失败！" | message="Serv00 alive SSH connection failed!"
  else
    recho "${GREEN}$user@$server 连接成功！${NC}" "${GREEN}$user@$server connection successful!${NC}"
    # message="Serv00 保活 SSH 连接成功！" | message="Serv00 alive SSH connection successful!"
  fi
  
  echo "----------------------------------------"
}

# 主函数 | Main function
main() {
  # 默认值 | Default values
  SERVERS_FILE="${DEFAULT_SERVERS_FILE}"
  
  # 解析命令行参数 | Parse command line arguments
  parse_args "$@"
  
  # 读取服务器列表 | Read server list
  read_servers "$SERVERS_FILE"
  
  # 对每个服务器执行保活操作 | Perform keep alive operation on each server
  for server in "${servers[@]}"; do
    # 跳过空行和注释行 | Skip empty lines and comment lines
    if [[ -n "$server" ]] && [[ ! "$server" =~ ^[[:space:]]*# ]]; then
      keep_alive "$server"
    fi
  done
}

# 执行主函数 | Execute main function
main "$@"
